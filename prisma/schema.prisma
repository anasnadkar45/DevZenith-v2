// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String      @id @unique
  email         String
  firstName     String
  lastName      String
  profileImage  String
  role          Role        @default(USER)
  resource      Resource[]
  createdSquads Squad[]
  SquadPosts    SquadPost[]
}

model Resource {
  id          String        @id @default(uuid())
  name        String
  description String
  image       String
  url         String
  category    CategoryTypes

  createdAt DateTime @default(now())
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Squad {
  id          String      @id @default(uuid())
  name        String
  username    String      @unique
  image       String
  description String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  User        User?       @relation(fields: [userId], references: [id])
  userId      String?
  SquadPosts  SquadPost[]
}

model SquadPost {
  id            String   @id @default(uuid())
  title         String
  description   Json?
  thumbnail     String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  Squad         Squad?   @relation(fields: [squadUsername], references: [username])
  squadUsername String?
  User          User?    @relation(fields: [userId], references: [id])
  userId        String?
}

enum CategoryTypes {
  frontend
  backend
  devops
}

enum Role {
  USER
  ADMIN
}
